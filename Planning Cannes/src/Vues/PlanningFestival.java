/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vues;
//imports à faire
import Metier.Film;
import Modele.DataSourceDAO;
import Modele.FilmDAO;
import com.toedter.calendar.JDayChooser;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JTable;

/**
 *
 * @author Madanael
 */
public class PlanningFestival extends javax.swing.JFrame {

    DataSourceDAO ds; //objet de connexionDAO

    /**
     * fenetre principale
     */
    public PlanningFestival() {
        initComponents();//initialiser la fenêtre
        setTitle("Planning du festival");//titre
        JDayChooser dayChooser = jCalendar1.getDayChooser();//récupérer le JDayChooser du JCalendar
        dayChooser.addPropertyChangeListener("day", new PropertyChangeListener() {//ajout d'un listener sur le JDayChooser
            @Override
            public void propertyChange(PropertyChangeEvent evt){
                // si clic sur le jour du calendrier
                String e = evt.getPropertyName();//recupère le nom de la propriété
                if (e.equals("day")) {
                    try {
                        JOptionPane jop2 = new JOptionPane();
                        String[] colonne = {"Ajouter projection", "Modifier projection", "Supprimer projection", "Afficher projections"};
                        String choix = (String) jop2.showInputDialog(null, "Que voulez-vous faire?", "Modifer film",
                                JOptionPane.QUESTION_MESSAGE,
                                null,
                                colonne,
                                colonne[2]);//fenêtre qui indique les possibilités
                        java.util.Date date = jCalendar1.getDate();//recuperation de la date cliquée
                        java.text.SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");//formatage de la date
                        String date1 = sdf.format(date);//recupération de la date formatée
                        switch (choix) {//les différentes options pour le calendrier
                            case "Ajouter projection":// si on veut ajouter une projection on lance la fenêtre appropriée
                                setVisible(false);
                                new AjoutProjection(date1).setVisible(true);
                                break;
                            case "Afficher projections": //affiche la liste des projections pour le jour cliqué
                                setVisible(false);
                                new ListeProjection(date1).setVisible(true);
                                break;
                            case "Modifier projection"://modifie une projection donnée
                                setVisible(false);
                                new ModificationProjection(date1).setVisible(true);
                                break;
                                
                            case "Supprimer projection"://supprime une projection donnée
                                setVisible(false);
                                new SuppressionProjection(date1).setVisible(true);
                                break;
                                
                        }
                    } catch (IOException ex) {
                        Logger.getLogger(PlanningFestival.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(PlanningFestival.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(PlanningFestival.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Malayalam MN", 2, 36)); // NOI18N
        jLabel1.setText("Plannings Festival de Cannes");

        jButton2.setText("Gérer les projections");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton6.setText("Ajouter un film");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Modifier un film");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jCalendar1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jCalendar1PropertyChange(evt);
            }
        });

        jMenu1.setText("Fichier");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Utilisateur");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButton2)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton6)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //si clic sur Gérerles projections affichage d'un message
        JOptionPane.showMessageDialog(null, "Veuillez cliquer sur un jour du calendrier pour effectuer cette action", "Title", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //si clic sur le bouton Ajouter un film on appelle la fenêtre ajout film
        setVisible(false);
        AjoutFilm af = new AjoutFilm();
        af.setTitle("Ajout de film");
        af.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //pour modifier un film
        Connection bd = null;
        Connection connexionBD = null;
        ResultSet rset = null;
        Statement stmt = null;
        try {
            connexionBD = ds.getConnection("connexion.properties");
            stmt = connexionBD.createStatement();
            rset = stmt.executeQuery("select nomFilm from Film");
            int i = 0;
            ArrayList<String> nom_film = new ArrayList();
            while (rset.next()) {
                nom_film.add(rset.getString(1));//recupération du nom des films de la bd dans l'arraylist
            }
            String[] st = new String[nom_film.size()];
            st = nom_film.toArray(st);
            JOptionPane jop = new JOptionPane();
            JOptionPane jop1 = new JOptionPane();
            JOptionPane jop2 = new JOptionPane();
            JOptionPane jop3 = new JOptionPane();
            String nom = (String) jop.showInputDialog(null, "Quel film voulez-vous modifier?", "Modifer film",
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    st,
                    st[2]);
            String[] colonne = {"nomFilm", "statusFilm", "duree"};
            String choix = (String) jop.showInputDialog(null, "Quel champ voulez-vous modifier?", "Modifer film",
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    colonne,
                    colonne[2]);
            String nom1 = jop2.showInputDialog(null, "Entrez la nouvelle valeur", "Nouvelle valeur", JOptionPane.QUESTION_MESSAGE);
            FilmDAO fm = new FilmDAO();//création d'un nouvel objet DAO
            int s = fm.modifier_film(nom, choix, nom1);//méthode de filmDAO pour modifier un film
            if (s == 1) {
                jop3.showMessageDialog(null, "La modification s\'est effectuée avec succès", "Succès", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            System.err.println("Problème: " + e.getMessage());
        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jCalendar1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jCalendar1PropertyChange
        // si clic sur le jour du calendrier

    }//GEN-LAST:event_jCalendar1PropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlanningFestival.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlanningFestival.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlanningFestival.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlanningFestival.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlanningFestival().setVisible(true);// run de la fenêtre
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private com.toedter.calendar.JCalendar jCalendar1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
